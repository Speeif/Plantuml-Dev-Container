{
	/**	
	*	When creating new snippets, please follow the these guidelines.
	*	* Use ":" between prefixes for variants,
	*	* Use "+" between prefixes for options.
	*	
	*/
	// * 
	// 
	//
	// **Variants** is the same type of component and/or template, just with
	// varying denotation.
	// ====================================================================
	// ############################ ENVIRONMENT ###########################
	// ############################# STANDARD #############################
	// ====================================================================
	"Start diagram":{
		"scope":"plantuml",
		"prefix":["startuml","@startuml","uml","new diagram", "diagram"],
		"body":[
			"@startuml ${1:diagramName}",
			"	!include ../environment.config",
			"	' remember that left to right is optional!"
			"	left to right direction",
			"	frame \"**${2:diagramType}** ${1:diagramName}\"{",
			"		$0",
			"	}",
			"@enduml"
		],
		"description":"Start a plantuml diagram off with this command."
	},
	// ====================================================================
	// ############################ ENVIRONMENT ###########################
	// ############################# USECASE ##############################
	// ====================================================================
	"Start usecase diagram":{
		"scope":"plantuml",
		"prefix":["uml:uc","uml usecase"],
		"body":[
			"@startuml ${1:diagram name}",
			"!include ../config.puml",
			"left to right direction",
			"frame \"<b>UC</b> ${1:diagram name}\"{",
			"    $0"
			"    actor A1 as \"User\"",
			"    actor A2 as \"Business\"",
			"        ",
			"    rectangle s1 as \"${2:system name}\"{",
			"        usecase uc1 as \"usecase\"",
			"    }",
			"    ",
			"    ' due to the processor having problem with placement of actors,",
			"    ' the flow has been specifically set here.",
			"    A1 -[hidden]d-s1",
			"    s1 -[hidden]d-A2",
			"}",
			"",
			"caption use case diagram environment",
			"@enduml",
		],
		"description":"usecase plantuml environment"
	},
	"Start usecase template":{
		"scope":"plantuml",
		"prefix":["uml:uc+exmpl","uml usecase example"],
		"body":[
			"@startuml Bank system example",
			"!include ../config.puml",
			"left to right direction",
			"frame \"<b>UC</b> Bank system example\"{",
			"    actor A1 as \"Customer\"",
			"    actor A2 as \"Security\"",
			"    actor A3 as \"VIP Customer\"",
			"    ",
			"    ' A derive arrow, on actors, shows that the actor",
			"    ' that points to another actor, has all interactions",
			"    ' with that system as the pointed to actor.",
			"    ' E.g. VIP Customer can do anythign a Customer can. ",
			"    A3 -r-|> A1 : (derives)",
			"    ",
			"    rectangle s1 as \"Bank System\"{",
			"        ' ======================================= '",
			"        ' ============= <userCases> ============= '",
			"        ' ======================================= '",
			"        ' \"together\" makes sure content is grouped \"together\"",
			"        together{",
			"            usecase uc1 as \"Insert card\"",
			"            usecase uc2 as \"withdraw money\"",
			"            usecase uc7 as \"View savings\"",
			"            ",
			"            ' Associations are relationships that describe",
			"            ' a usage connection. ",
			"            A1 - uc1 : (associates)",
			"            A1 - uc2 : (associates)",
			"            A3 - uc7 : (associates)",
			"        }",
			"        ' ======================================= '",
			"        ' ============= </userCases> ============ '",
			"        ' ======================================= '",
			"        ",
			"        ' ======================================= '",
			"        ' ============ <systemCases> ============ '",
			"        ' ======================================= '",
			"        together{",
			"            usecase uc4 as \"Withdraw \$10\"",
			"            usecase uc5 as \"Withdraw \$20\"",
			"            ",
			"            ' A derive arrow, on a use cae, shows that the",
			"            ' pointed from use case, is a choice to satisfy",
			"            ' the pointed to usecase.",
			"            ' E.g. when you withdraw money, you can do so in",
			"            ' $10 or $20 dollar increments. ",
			"            uc4 -u-|> uc2 : (derived)",
			"            uc5 -u-|> uc2 : (derived)",
			"        }",
			"        usecase uc6 as \"Verify card\"",
			"        ' <<include>> forces the use case to be used after",
			"        uc1 <.. uc6 : <<include>>",
			"        ",
			"        ' ======================================== '",
			"        ' ============ </systemCases> ============ '",
			"        ' ======================================== '",
			"        ",
			"        ' ======================================= '",
			"        ' =========== <businessCases> =========== '",
			"        ' ======================================= '",
			"        together{",
			"            usecase uc3 as \"Block card\"",
			"            ",
			"            A2 -u- uc3 : (associates)",
			"            ' <<extend>> means it's an optional next use case",
			"            uc6 <.d. uc3 : <<extend>>",
			"        }",
			"        ' ======================================= '",
			"        ' =========== </businessCases> ========== '",
			"        ' ======================================= '",
			"    }",
			"    ",
			"    ' due to the processor having problem with placement of actors,",
			"    ' the flow has been specifically set here.",
			"    A1 -[hidden]d-s1",
			"    s1 -[hidden]d-A2",
			"    ",
			"    caption this is an example template of a use case diagram.\\nArrows and their semantic meanings have been written out in parenthesis. Do note they are not normally written out like this!\\nArrow definitions can be found as comments in the code.",
			"}",
			"@enduml",
		],
		"description":"An example of a usecase diagram, with documentation of how to design one."
	},
	// ==================================================================== //
	// ############################# COMPONENTS ########################### //
	// ==================================================================== //
	"Rectangle":{
		"scope":"plantuml",
		"prefix":["rect","Rectangle"],
		"body":[
			"rectangle ${2:identification} as \"${1:rectName}\"",
			"$0"
		],
		"description":"Rectangle component"
	},
	"RectangleBlock":{
		"scope":"plantuml",
		"prefix":["rect:b","Rectangle block"],
		"body":[
			"rectangle ${2:identification} as \"${1:rectName}\"{",
			"	$0",
			"}"
		],
		"description":"Block version of rectangle component"
	},
	"Usecase":{
		"scope":"plantuml",
		"prefix":["uc","usecase"],
		"body":[
			"usecase ${2:identification} as \"${1:usecaseName}\""
		],
		"description":"Plantuml usecase"
	},
	"together component":{
		"scope":"plantuml",
		"prefix":["t","together"],
		"body":[
			"together{",
			"	$0",
			"}"
		],
		"description":"Opens a together block, which makes component stay together as a hidden grouping."
	},
	"actor":{
		"scope":"plantuml",
		"prefix":["act","actor"],
		"body":[
			"actor ${2:identifier} as \"${1:name}\"$0",
		],
		"description":"Creates an actor"
	},
	// ==================================================================== //
	// ##################### OPTIONAL LAYOUT COMPONENTS ################### //
	// ==================================================================== //
	"rect layout":{
		"scope":"plantuml",
		"prefix":["rect:l","rectangle layout"],
		"body":[
			"rectangle ${2:identification} as \"${1:groupName}\" <<layout>>{",
			"	$0",
			"}"
		],
		"description":"[NOTE: Use the rect+l:param before this block, for invisibility]\\n An invisible rectangle used for grouping elements together."
	}
}
	